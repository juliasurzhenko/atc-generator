const pool = require('../models/db');

/**
 * üìå –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ –∑ `generaldata`
 */
const getAllGeneralData = async (req, res) => {
    try {
        const [rows] = await pool.query('SELECT id, participants_filename, template_filename, uploaded_at FROM generaldata');
        res.json(rows);
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤:', error);
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
};

/**
 * üìå –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel —ñ —à–∞–±–ª–æ–Ω —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∞
 */
const uploadFiles = async (req, res) => {
    try {
        if (!req.files || !req.files['participantsFile'] || !req.files['templateFile']) {
            return res.status(400).json({ error: '–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ–±–∏–¥–≤–∞ —Ñ–∞–π–ª–∏!' });
        }

        const participantsFile = req.files['participantsFile'][0];
        const templateFile = req.files['templateFile'][0];

        console.log("üìÇ –û—Ç—Ä–∏–º–∞–Ω–æ —Ñ–∞–π–ª–∏:", participantsFile.originalname, templateFile.originalname);

        const sql = `
            INSERT INTO generaldata (participants_filename, participants_filedata, template_filename, template_filedata) 
            VALUES (?, ?, ?, ?)
        `;
        await pool.query(sql, [
            participantsFile.originalname, Buffer.from(participantsFile.buffer),
            templateFile.originalname, Buffer.from(templateFile.buffer)
        ]);

        res.json({ message: '‚úÖ –§–∞–π–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ' });
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤:', error);
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
};

/**
 * üìå –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª –∑–∞ ID
 */
const downloadFileById = async (req, res) => {
    try {
        const { id } = req.params;
        const { type } = req.query; // –æ—Ç—Ä–∏–º—É—î–º–æ —Ç–∏–ø —Ñ–∞–π–ª—É ('participants' –∞–±–æ 'template')

        const [rows] = await pool.query('SELECT * FROM generaldata WHERE id = ?', [id]);

        if (rows.length === 0) {
            return res.status(404).json({ error: '–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });
        }

        const file = rows[0];

        let filename, filedata;
        if (type === 'participants') {
            filename = file.participants_filename;
            filedata = file.participants_filedata;
        } else if (type === 'template') {
            filename = file.template_filename;
            filedata = file.template_filedata;
        } else {
            return res.status(400).json({ error: '–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ç–∏–ø —Ñ–∞–π–ª—É' });
        }

        res.setHeader('Content-Disposition', `attachment; filename="${filename}"`);
        res.setHeader('Content-Type', 'application/octet-stream');
        res.send(filedata);
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–π–ª—É:', error);
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
};

/**
 * üìå –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å –∑–∞ ID
 */
const deleteFileById = async (req, res) => {
    try {
        const { id } = req.params;
        await pool.query('DELETE FROM generaldata WHERE id = ?', [id]);
        res.json({ message: '‚úÖ –ó–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ' });
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è:', error);
        res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
};

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
module.exports = {
    getAllGeneralData,
    uploadFiles,
    downloadFileById,
    deleteFileById
};
